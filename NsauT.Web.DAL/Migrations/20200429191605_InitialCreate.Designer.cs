// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NsauT.Web.DAL.DataStore;

namespace NsauT.Web.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200429191605_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("NsauT.Web.DAL.Models.GroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int>("TimetableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimetableId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("NsauT.Web.DAL.Models.PeriodEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cabinet")
                        .HasColumnType("text");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLecture")
                        .HasColumnType("boolean");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("Option")
                        .HasColumnType("integer");

                    b.Property<string>("OptionCabinet")
                        .HasColumnType("text");

                    b.Property<DateTime?>("OptionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SchoolDayId")
                        .HasColumnType("integer");

                    b.Property<string>("Subgroup")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SchoolDayId");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("NsauT.Web.DAL.Models.SchoolDayEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDayOfEvenWeek")
                        .HasColumnType("boolean");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SchoolDays");
                });

            modelBuilder.Entity("NsauT.Web.DAL.Models.SubjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LectureEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LectureStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("PracticeEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("PracticeStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Teachers")
                        .HasColumnType("text");

                    b.Property<int>("TimetableId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TimetableId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("NsauT.Web.DAL.Models.TimetableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("Key");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("NsauT.Web.DAL.Models.GroupEntity", b =>
                {
                    b.HasOne("NsauT.Web.DAL.Models.TimetableEntity", "Timetable")
                        .WithMany("Groups")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NsauT.Web.DAL.Models.PeriodEntity", b =>
                {
                    b.HasOne("NsauT.Web.DAL.Models.SchoolDayEntity", "SchoolDay")
                        .WithMany("Periods")
                        .HasForeignKey("SchoolDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NsauT.Web.DAL.Models.SchoolDayEntity", b =>
                {
                    b.HasOne("NsauT.Web.DAL.Models.SubjectEntity", "Subject")
                        .WithMany("Days")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NsauT.Web.DAL.Models.SubjectEntity", b =>
                {
                    b.HasOne("NsauT.Web.DAL.Models.TimetableEntity", "Timetable")
                        .WithMany("Subjects")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
